{
  "version": 3,
  "sources": ["../schemawax/dist/index.js", "dep:schemawax"],
  "sourcesContent": ["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.recursive=exports.object=exports.keyValuePairs=exports.record=exports.tuple=exports.array=exports.regex=exports.literalUnion=exports.oneOf=exports.literal=exports.boolean=exports.number=exports.string=exports.unknown=exports.nullable=exports.checkDefined=exports.DecoderError=exports.createDecoder=void 0;const createDecoder=decoder=>Object.assign(Object.assign({},decoder),{decode:data=>{try{return decoder.forceDecode(data)}catch(_a){return null}},validate:data=>{try{return{type:\"ok\",data:decoder.forceDecode(data)}}catch(e){if(e instanceof DecoderError){return{type:\"error\",error:e}}throw e}},is:data=>{try{decoder.forceDecode(data);return true}catch(_a){return false}},andThen:transformer=>{return exports.createDecoder({forceDecode:data=>transformer(decoder.forceDecode(data))})}});exports.createDecoder=createDecoder;class DecoderError extends SyntaxError{constructor(message){super(message);this.name=\"DecoderError\";Object.setPrototypeOf(this,new.target.prototype)}}exports.DecoderError=DecoderError;const show=data=>JSON.stringify(data,null,2);const checkDefined=data=>{if(data==null)throw new DecoderError(\"This value is not there\");return false};exports.checkDefined=checkDefined;const nullable=decoder=>exports.createDecoder({forceDecode:data=>data===null?null:decoder.forceDecode(data)});exports.nullable=nullable;const primitiveDecoder=(dataType,condition)=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);if(!condition(data)){throw new DecoderError(`This is not ${dataType}: ${show(data)}`)}return data}});exports.unknown=exports.createDecoder({forceDecode:data=>data});exports.string=primitiveDecoder(\"a string\",$=>typeof $===\"string\");exports.number=primitiveDecoder(\"a number\",$=>typeof $===\"number\"&&Number.isFinite($));exports.boolean=primitiveDecoder(\"a boolean\",$=>typeof $===\"boolean\");const literal=literal=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);if(data!==literal){throw new DecoderError(`Data does not match the literal. Expected: '${literal}', actual value: '${show(data)}'`)}return data}});exports.literal=literal;const oneOf=(...decoders)=>exports.createDecoder({forceDecode:data=>{var _a;const errors=[];for(const decoder of decoders){try{return decoder.forceDecode(data)}catch(e){errors.push((_a=e.message)!==null&&_a!==void 0?_a:\"Unknown error\")}}throw new DecoderError(`None of the decoders worked:\\n${show(errors)}`)}});exports.oneOf=oneOf;const literalUnion=(...decoders)=>exports.oneOf(...decoders.map(exports.literal));exports.literalUnion=literalUnion;const regex=regex=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);if(!regex.test(data)){throw new DecoderError(`Data '${data}' does not satisfy the regex '${String(regex)}'.`)}return data}});exports.regex=regex;function checkArrayType(data){if(!Array.isArray(data))throw new DecoderError(`This is not an array: ${show(data)}`)}const array=decoder=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);checkArrayType(data);return data.map(decoder.forceDecode)}});exports.array=array;const tuple=(...decoders)=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);checkArrayType(data);if(decoders.length>data.length){throw new DecoderError(`The tuple is not long enough. ${decoders.length} > ${data.length}`)}return decoders.map((decoder,index)=>decoder.forceDecode(data[index]))}});exports.tuple=tuple;function checkDictType(data){if(typeof data!==\"object\"||data===null||Array.isArray(data)){throw new DecoderError(`This is not an object: ${show(data)}`)}else if(Object.keys(data).some($=>typeof $!==\"string\")){throw new DecoderError(`Not all keys in this object are strings: ${show(data)}`)}}const record=decoder=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);checkDictType(data);return Object.fromEntries(Object.entries(data).map(([key,value])=>[key,decoder.forceDecode(value)]))}});exports.record=record;const keyValuePairs=decoder=>exports.createDecoder({forceDecode:data=>Object.entries(exports.record(decoder).forceDecode(data))});exports.keyValuePairs=keyValuePairs;const required=struct=>exports.createDecoder({forceDecode:data=>{checkDictType(data);const parsed={};for(const key in struct){if(data[key]===undefined)throw new DecoderError(`Object missing required property '${key}'`);parsed[key]=struct[key].forceDecode(data[key])}return parsed}});const partial=struct=>exports.createDecoder({forceDecode:data=>{checkDictType(data);const parsed={};for(const key in struct){if(data[key]!==undefined){parsed[key]=struct[key].forceDecode(data[key])}}return parsed}});const object=struct=>exports.createDecoder({forceDecode:data=>{exports.checkDefined(data);const result={};if(struct.required!==undefined){Object.assign(result,required(struct.required).forceDecode(data))}if(struct.optional!==undefined){Object.assign(result,partial(struct.optional).forceDecode(data))}return result}});exports.object=object;const recursive=decoder=>exports.createDecoder({forceDecode:data=>{return decoder().forceDecode(data)}});exports.recursive=recursive;", "export default require(\"./node_modules/schemawax/dist/index.js\");"],
  "mappings": "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",
  "names": []
}
